magrittr::multiply_by_matrix(., t(.)) %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
CCA_MSE[i, sim] <- sum((A_CCA - c(A))^2)
#
X1 <- rnorm(n*p1) %>% matrix(nrow=n)
X2 <- rnorm(n*p2) %>% matrix(nrow=n)
assign1 <- transport::transport(transport::pp(X1),
transport::pp(Y1),
p = 2)
assign2 <- transport::transport(transport::pp(X2),
transport::pp(Y2),
p = 2)
X1 <- X1[order(assign1[, 2]), ]
X2 <- X2[order(assign2[, 2]), ]
A_CCA <- cbind(X1, X2) %>%
apply(2, function(y){
y - mean(y)
}) %>%
magrittr::divide_by(sqrt(n)) %>%
t() %>%
magrittr::multiply_by_matrix(., t(.)) %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
PLUG_MSE[i, sim] <- sum((A_CCA - c(A))^2)
#
cmcca_res <- cmcca::cmcca_mcmc(Y1, Y2, iter = 500)
A_CCA <- sapply(1:ncol(cmcca_res$Lambda), function(m){
c(cmcca_res$Q1[,,m]%*%diag(cmcca_res$Lambda[, m])%*%t(cmcca_res$Q2[,,m]))
}) %>%
rowMeans()
CMCCA_MSE[i, sim] <- sum((A_CCA - c(A))^2)
}
}
#
df <- data.frame(n = rep(N, 4),
Method = rep(c("CCA", "GCCCA", "CMCCA plugin", "CMCCA MCMC"), each = length(N)),
rbind(CCA_MSE, COP_MSE, PLUG_MSE)) %>%
reshape2::melt(id.vars = c("n", "Method")) %>%
dplyr::mutate(Method = factor(Method, levels = c('CCA', 'GCCCA', 'CMCCA plugin', 'CMCCA MCMC')))
#
df <- data.frame(n = rep(N, 4),
Method = rep(c("CCA", "GCCCA", "CMCCA plugin", "CMCCA MCMC"), each = length(N)),
rbind(CCA_MSE, COP_MSE, PLUG_MSE, CMCCA_MSE)) %>%
reshape2::melt(id.vars = c("n", "Method")) %>%
dplyr::mutate(Method = factor(Method, levels = c('CCA', 'GCCCA', 'CMCCA plugin', 'CMCCA MCMC')))
par(mar = c(4, 5, 4, 2))
boxplot(value ~ n + Method, data = df, names = c("50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000"),
at = c(1:5, 7:11, 13:17), xlab = "n", ylab = expression(L[W]),
col = c("#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77",
"#d95f02", "#d95f02", "#d95f02", "#d95f02", "#d95f02",
"#7570b3", "#7570b3", "#7570b3", "#7570b3", "#7570b3",
"#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02"), outline = F,
ylim = c(0, 0.18), cex.lab = 1.2)
boxplot(value ~ n + Method, data = df, names = c("50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000"),
at = c(1:5, 7:11, 13:17), xlab = "n", ylab = expression(L[W]),
col = c("#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77",
"#d95f02", "#d95f02", "#d95f02", "#d95f02", "#d95f02",
"#7570b3", "#7570b3", "#7570b3", "#7570b3", "#7570b3",
"#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02"), outline = F,
ylim = c(0, 0.18), cex.lab = 1.2)
boxplot(value ~ n + Method, data = df, names = c("50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000"),
at = c(1:5, 7:11, 13:17, 19:23), xlab = "n", ylab = expression(L[W]),
col = c("#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77",
"#d95f02", "#d95f02", "#d95f02", "#d95f02", "#d95f02",
"#7570b3", "#7570b3", "#7570b3", "#7570b3", "#7570b3",
"#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02"), outline = F,
ylim = c(0, 0.18), cex.lab = 1.2)
df
length(c(1:5, 7:11, 13:17, 19:23))
length(c("#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77",
"#d95f02", "#d95f02", "#d95f02", "#d95f02", "#d95f02",
"#7570b3", "#7570b3", "#7570b3", "#7570b3", "#7570b3",
"#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02"))
length(c("50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000"))
boxplot(value ~ n + Method, data = df, names = c("50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000"),
at = c(1:5, 7:11, 13:17, 19:23), xlab = "n", ylab = expression(L[W]),
col = c("#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77",
"#d95f02", "#d95f02", "#d95f02", "#d95f02", "#d95f02",
"#7570b3", "#7570b3", "#7570b3", "#7570b3", "#7570b3",
"#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02"), outline = F,
ylim = c(0, 0.18), cex.lab = 1.2)
dim(df)
#
df <- data.frame(n = rep(N, 4),
Method = rep(c("CCA", "GCCCA", "CMCCA plugin", "CMCCA MCMC"), each = length(N)),
rbind(CCA_MSE, COP_MSE, PLUG_MSE, CMCCA_MSE)) %>%
reshape2::melt(id.vars = c("n", "Method")) %>%
dplyr::mutate(Method = factor(Method, levels = c('CCA', 'GCCCA', 'CMCCA plugin', 'CMCCA MCMC')))
df
boxplot(value ~ n + Method, data = df, names = c("50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000"),
at = c(1:5, 7:11, 13:17, 19:23), xlab = "n", ylab = expression(L[W]),
col = c("#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77",
"#d95f02", "#d95f02", "#d95f02", "#d95f02", "#d95f02",
"#7570b3", "#7570b3", "#7570b3", "#7570b3", "#7570b3",
"#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02"), outline = F,
ylim = c(0, 0.18), cex.lab = 1.2)
boxplot(value ~ n + Method, data = df,
at = c(1:5, 7:11, 13:17, 19:23), xlab = "n", ylab = expression(L[W]),
col = c("#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77",
"#d95f02", "#d95f02", "#d95f02", "#d95f02", "#d95f02",
"#7570b3", "#7570b3", "#7570b3", "#7570b3", "#7570b3",
"#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02"), outline = F,
ylim = c(0, 0.18), cex.lab = 1.2)
df$n
df
df$value <- rnorm(length(df$value))
par(mar = c(4, 5, 4, 2))
boxplot(value ~ n + Method, data = df, names = c("50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000",
"50", "100", "250", "500", "1000"),
at = c(1:5, 7:11, 13:17, 19:23), xlab = "n", ylab = expression(L[W]),
col = c("#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77", "#1b9e77",
"#d95f02", "#d95f02", "#d95f02", "#d95f02", "#d95f02",
"#7570b3", "#7570b3", "#7570b3", "#7570b3", "#7570b3",
"#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02", "#e6ab02"), outline = F,
ylim = c(0, 0.18), cex.lab = 1.2)
legend("topleft", fill = c("#1b9e77", "#d95f02", "#7570b3", "#e6ab02"), legend = c("CCA","GCCCA","CMCCA plugin", 'CMCCA MCMC'), horiz = T)
#
set.seed(1)
#
library(magrittr)
library(tidyverse)
#
N <- c(50, 100, 250, 500, 1000)
n_sim <- 5
p1 <- 2
p2 <- 2
d <- min(p1, p2)
#
COP_MSE <- matrix(NA, length(N), n_sim)
CCA_MSE <- matrix(NA, length(N), n_sim)
CMCCA_MSE <- matrix(NA, length(N), n_sim)
PLUG_MSE <- matrix(NA, length(N), n_sim)
#
Sig <- matrix(c(1, 0.25, 0.25, 1), nrow = 2)
#
linear_trans <- function(x, U){
U%*%x
}
#
for(i in 1:length(N)){
n <- N[i]
for(sim in 1:n_sim){
rm(.Random.seed, envir=globalenv())
#
l1 <- rbeta(1, 2, 1)
l2 <- runif(1, 0, l1)
Lambda <- c(l1, l2)
#
S <- rnorm(p1*d) %>% matrix(nrow = p1)
Q1 <- svd(S)[["u"]]%*%t(svd(S)[["v"]])
S <- rnorm(p2*d) %>% matrix(nrow = p2)
Q2 <- svd(S)[["u"]]%*%t(svd(S)[["v"]])
A <- Q1%*%diag(Lambda)%*%t(Q2)
#
Z <- sapply(1:n, function(i){
rnorm(d, sd = sqrt(Lambda))
}) %>% t()
#
Sigma1 <- diag(rep(1, p1)) - Q1%*%diag(Lambda)%*%t(Q1)
Sigma2 <- diag(rep(1, p2)) - Q2%*%diag(Lambda)%*%t(Q2)
X1 <- (Z%*%t(Q1)) + matrix(rnorm(n*p1), nrow=n)%*%chol(Sigma1)
X2 <- (Z%*%t(Q2)) + matrix(rnorm(n*p2), nrow=n)%*%chol(Sigma2)
#
Y1 <- apply(X1, 1, function(x){
linear_trans(x, Sig)
}) %>%
t()
#
Y2 <- apply(X2, 1, function(x){
linear_trans(x, Sig)
}) %>%
t()
#
cop_res <- sbgcop::sbgcop.mcmc(cbind(Y1, Y2), plugin.marginal = rep(T, p1+p2), nsamp = 500)
cop_samps <- cop_res$C.psamp %>%
apply(3, function(C){
C %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
})
COP_MSE[i, sim] <- sum((rowMeans(cop_samps) - c(A))^2)
#
A_CCA <- cbind(Y1, Y2) %>%
apply(2, function(y){
y - mean(y)
}) %>%
magrittr::divide_by(sqrt(n)) %>%
t() %>%
magrittr::multiply_by_matrix(., t(.)) %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
CCA_MSE[i, sim] <- sum((A_CCA - c(A))^2)
#
X1 <- rnorm(n*p1) %>% matrix(nrow=n)
X2 <- rnorm(n*p2) %>% matrix(nrow=n)
assign1 <- transport::transport(transport::pp(X1),
transport::pp(Y1),
p = 2)
assign2 <- transport::transport(transport::pp(X2),
transport::pp(Y2),
p = 2)
X1 <- X1[order(assign1[, 2]), ]
X2 <- X2[order(assign2[, 2]), ]
A_CCA <- cbind(X1, X2) %>%
apply(2, function(y){
y - mean(y)
}) %>%
magrittr::divide_by(sqrt(n)) %>%
t() %>%
magrittr::multiply_by_matrix(., t(.)) %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
PLUG_MSE[i, sim] <- sum((A_CCA - c(A))^2)
#
cmcca_res <- cmcca::cmcca_mcmc(Y1, Y2, iter = 500)
A_CCA <- sapply(1:ncol(cmcca_res$Lambda), function(m){
c(cmcca_res$Q1[,,m]%*%diag(cmcca_res$Lambda[, m])%*%t(cmcca_res$Q2[,,m]))
}) %>%
rowMeans()
CMCCA_MSE[i, sim] <- sum((A_CCA - c(A))^2)
}
}
#
set.seed(1)
#
library(magrittr)
library(tidyverse)
#
N <- c(50, 100, 250, 500, 1000)
n_sim <- 5
p1 <- 2
p2 <- 2
d <- min(p1, p2)
#
COP_MSE <- matrix(NA, length(N), n_sim)
CCA_MSE <- matrix(NA, length(N), n_sim)
CMCCA_MSE <- matrix(NA, length(N), n_sim)
PLUG_MSE <- matrix(NA, length(N), n_sim)
#
Sig <- matrix(c(1, 0.25, 0.25, 1), nrow = 2)
#
linear_trans <- function(x, U){
U%*%x
}
#
for(i in 1:length(N)){
n <- N[i]
for(sim in 1:n_sim){
rm(.Random.seed, envir=globalenv())
#
l1 <- rbeta(1, 2, 1)
l2 <- runif(1, 0, l1)
Lambda <- c(l1, l2)
#
S <- rnorm(p1*d) %>% matrix(nrow = p1)
Q1 <- svd(S)[["u"]]%*%t(svd(S)[["v"]])
S <- rnorm(p2*d) %>% matrix(nrow = p2)
Q2 <- svd(S)[["u"]]%*%t(svd(S)[["v"]])
A <- Q1%*%diag(Lambda)%*%t(Q2)
#
Z <- sapply(1:n, function(i){
rnorm(d, sd = sqrt(Lambda))
}) %>% t()
#
Sigma1 <- diag(rep(1, p1)) - Q1%*%diag(Lambda)%*%t(Q1)
Sigma2 <- diag(rep(1, p2)) - Q2%*%diag(Lambda)%*%t(Q2)
X1 <- (Z%*%t(Q1)) + matrix(rnorm(n*p1), nrow=n)%*%chol(Sigma1)
X2 <- (Z%*%t(Q2)) + matrix(rnorm(n*p2), nrow=n)%*%chol(Sigma2)
#
Y1 <- apply(X1, 1, function(x){
linear_trans(x, Sig)
}) %>%
t()
#
Y2 <- apply(X2, 1, function(x){
linear_trans(x, Sig)
}) %>%
t()
#
cop_res <- sbgcop::sbgcop.mcmc(cbind(Y1, Y2), plugin.marginal = rep(T, p1+p2), nsamp = 500)
cop_samps <- cop_res$C.psamp %>%
apply(3, function(C){
C %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
})
COP_MSE[i, sim] <- sum((rowMeans(cop_samps) - c(A))^2)
#
A_CCA <- cbind(Y1, Y2) %>%
apply(2, function(y){
y - mean(y)
}) %>%
magrittr::divide_by(sqrt(n)) %>%
t() %>%
magrittr::multiply_by_matrix(., t(.)) %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
CCA_MSE[i, sim] <- sum((A_CCA - c(A))^2)
#
X1 <- rnorm(n*p1) %>% matrix(nrow=n)
X2 <- rnorm(n*p2) %>% matrix(nrow=n)
assign1 <- transport::transport(transport::pp(X1),
transport::pp(Y1),
p = 2)
assign2 <- transport::transport(transport::pp(X2),
transport::pp(Y2),
p = 2)
X1 <- X1[order(assign1[, 2]), ]
X2 <- X2[order(assign2[, 2]), ]
A_CCA <- cbind(X1, X2) %>%
apply(2, function(y){
y - mean(y)
}) %>%
magrittr::divide_by(sqrt(n)) %>%
t() %>%
magrittr::multiply_by_matrix(., t(.)) %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
PLUG_MSE[i, sim] <- sum((A_CCA - c(A))^2)
#
cmcca_res <- cmcca::cmcca_mcmc(Y1, Y2, iter = 500, maxn = 2)
A_CCA <- sapply(1:ncol(cmcca_res$Lambda), function(m){
c(cmcca_res$Q1[,,m]%*%diag(cmcca_res$Lambda[, m])%*%t(cmcca_res$Q2[,,m]))
}) %>%
rowMeans()
CMCCA_MSE[i, sim] <- sum((A_CCA - c(A))^2)
}
}
i
n <- 1000
rm(.Random.seed, envir=globalenv())
#
l1 <- rbeta(1, 2, 1)
l2 <- runif(1, 0, l1)
Lambda <- c(l1, l2)
#
S <- rnorm(p1*d) %>% matrix(nrow = p1)
Q1 <- svd(S)[["u"]]%*%t(svd(S)[["v"]])
S <- rnorm(p2*d) %>% matrix(nrow = p2)
Q2 <- svd(S)[["u"]]%*%t(svd(S)[["v"]])
A <- Q1%*%diag(Lambda)%*%t(Q2)
#
Z <- sapply(1:n, function(i){
rnorm(d, sd = sqrt(Lambda))
}) %>% t()
#
Sigma1 <- diag(rep(1, p1)) - Q1%*%diag(Lambda)%*%t(Q1)
Sigma2 <- diag(rep(1, p2)) - Q2%*%diag(Lambda)%*%t(Q2)
X1 <- (Z%*%t(Q1)) + matrix(rnorm(n*p1), nrow=n)%*%chol(Sigma1)
X2 <- (Z%*%t(Q2)) + matrix(rnorm(n*p2), nrow=n)%*%chol(Sigma2)
#
Y1 <- apply(X1, 1, function(x){
linear_trans(x, Sig)
}) %>%
t()
#
Y2 <- apply(X2, 1, function(x){
linear_trans(x, Sig)
}) %>%
t()
#
cop_res <- sbgcop::sbgcop.mcmc(cbind(Y1, Y2), plugin.marginal = rep(T, p1+p2), nsamp = 500)
cop_samps <- cop_res$C.psamp %>%
apply(3, function(C){
C %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
})
COP_MSE[i, sim] <- sum((rowMeans(cop_samps) - c(A))^2)
#
A_CCA <- cbind(Y1, Y2) %>%
apply(2, function(y){
y - mean(y)
}) %>%
magrittr::divide_by(sqrt(n)) %>%
t() %>%
magrittr::multiply_by_matrix(., t(.)) %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
CCA_MSE[i, sim] <- sum((A_CCA - c(A))^2)
#
X1 <- rnorm(n*p1) %>% matrix(nrow=n)
X2 <- rnorm(n*p2) %>% matrix(nrow=n)
assign1 <- transport::transport(transport::pp(X1),
transport::pp(Y1),
p = 2)
assign2 <- transport::transport(transport::pp(X2),
transport::pp(Y2),
p = 2)
X1 <- X1[order(assign1[, 2]), ]
X2 <- X2[order(assign2[, 2]), ]
A_CCA <- cbind(X1, X2) %>%
apply(2, function(y){
y - mean(y)
}) %>%
magrittr::divide_by(sqrt(n)) %>%
t() %>%
magrittr::multiply_by_matrix(., t(.)) %>%
cmcca::compute_relation_matrix(c(p1, p2)) %>%
cmcca::extract_association_matrices(c(p1, p2)) %>%
magrittr::extract2('(1, 2)') %>%
c()
PLUG_MSE[i, sim] <- sum((A_CCA - c(A))^2)
#
cmcca_res <- cmcca::cmcca_mcmc(Y1, Y2, iter = 500)
#
cmcca_res <- cmcca::cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
A_CCA <- sapply(1:ncol(cmcca_res$Lambda), function(m){
c(cmcca_res$Q1[,,m]%*%diag(cmcca_res$Lambda[, m])%*%t(cmcca_res$Q2[,,m]))
}) %>%
rowMeans()
print(Sys.time())
print(Sys.time())
cmcca_res <- cmcca::cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
print(Sys.time())
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
mY <- colMeans(cbind(Y1, Y2))
cY <- cbind(Y1, Y2) %>%
apply(1, function(y){
y - mY
}) %>%
t()
colMeans(cY)
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
#
# Generalized Gibbs step
Cmat <- rbind(cbind(diag(rep(1, p1)), Q1%*%diag(Lambda)%*%t(Q2)),
cbind(Q2%*%diag(Lambda)%*%t(Q1), diag(rep(1, p2))))
dim(Cmat)
#
# Generalized Gibbs step
Cmatinv <- solve(Cmat)
dim(cY)
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
#
# Generalized Gibbs step
Cmatinv <- solve(Cmat)
iv <- sum(diag(Cmatinv%*%crossprod(cY)))
mn <- sum(diag(Cmatinv%*%crossprod(cbind(X1, X2), cY)))
iv
mn
g <- truncdist::rtrunc(1, "norm", b = 0, mean = mn/iv, sd = 1/sqrt(iv))
mn/iv
1/sqrt(iv)
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
plot(X1 + 0.01*cY[,1:p1])
plot(X1 + 0.05*cY[,1:p1])
plot(X1 + 0.09*cY[,1:p1])
plot(X1 + 0.2*cY[,1:p1])
plot(X1)
for(t in 1:100){plot(X1 + (t/100)*cY[,1:p1]); Sys.sleep(0.1)}
apply(cY, 2, var)
help(sweep)
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
source("~/Work/Projects/multirank/cmcca/R/cmcca_mcmc.R")
cmcca_res <- cmcca_mcmc(Y1, Y2, iter = 500, maxn = 10)
setwd("~/Work/Projects/multirank/cmcca")
devtools::install(".")
